@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

// Media Query Manager
/* 
0 - 600px:      Phone
600 - 900px:    Tablet Portrait
900 - 1200px:   Tablet landscape
1200 - 1800px:  Desktop
1800px + :      Big desktop 
 */
// ORDER: Base + typography > general layout + grid > page layout > components
/*
$breakpoint argument choices:
- phone
- tab-port
- tab-land
- big-desktop 
*/
// 1em = 16px
@mixin respond($breakpoint) {
  @if $breakpoint == phone {
    @media only screen and (max-width: 37.5em) {
      @content;
    } //600px
  }
  @if $breakpoint == tab-port {
    @media only screen and (max-width: 56.25em) {
      @content;
    } //900 px
  }
  @if $breakpoint == tab-land {
    @media only screen and (max-width: 75em) {
      @content;
    } //1200px
  }
  @if $breakpoint == big-desktop {
    @media only screen and (min-width: 112.5em) {
      @content;
    } //1800px
  }
}

// Define vertical, horizontal, or both position
@mixin center($position) {
  position: absolute;

  @if $position == 'vertical' {
    top: 50%;
    -webkit-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    transform: translateY(-50%);
  } @else if $position == 'horizontal' {
    left: 50%;
    -webkit-transform: translateX(-50%);
    -ms-transform: translateX(-50%);
    transform: translate(-50%);
  } @else if $position == 'both' {
    top: 50%;
    left: 50%;
    -webkit-transform: translate(-50%, -50%);
    -ms-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
  }
}

//Animation mixin setup
@mixin keyframes($animation-name) {
  @-webkit-keyframes #{$animation-name} {
    @content;
  }
  @-moz-keyframes #{$animation-name} {
    @content;
  }
  @-ms-keyframes #{$animation-name} {
    @content;
  }
  @-o-keyframes #{$animation-name} {
    @content;
  }
  @keyframes #{$animation-name} {
    @content;
  }
}
@mixin animation($str) {
  -webkit-animation: #{$str};
  -moz-animation: #{$str};
  -ms-animation: #{$str};
  -o-animation: #{$str};
  animation: #{$str};
}
// //Usage
// // Define animation name, and properties
// @include keyframes(fade-out) {
// 0% { opacity: 1; }
// 90% { opacity: 0; }
// }
// // Add animation to element
// .element {
// width: 100px;
// height: 100px;
// background: black;
// @include animation('fade-out 5s 3');
// }

@mixin background-gradient($start-color, $end-color, $orientation) {
  background: $start-color;

  @if $orientation == 'vertical' {
    background: -webkit-linear-gradient(top, $start-color, $end-color);
    background: linear-gradient(to bottom, $start-color, $end-color);
  } @else if $orientation == 'horizontal' {
    background: -webkit-linear-gradient(left, $start-color, $end-color);
    background: linear-gradient(to right, $start-color, $end-color);
  } @else {
    background: -webkit-radial-gradient(
      center,
      ellipse cover,
      $start-color,
      $end-color
    );
    background: radial-gradient(ellipse at center, $start-color, $end-color);
  }
}
// //Usage:
// //$start-color, $end-color, $orientation - vertical/horizontal/radial
// .foo {
//   @include background-gradient(red, black, 'vertical');
// }
// //Output
// .foo {
//   background: -webkit-linear-gradient(top, red, black);
//   background: linear-gradient(to bottom, red, black);
// }

@mixin font-face($font-name, $file-name, $weight: normal, $style: normal) {
  @font-face {
    font-family: quote($font-name);
    src: url($file-name+'.eot');
    src: url($file-name+'.eot?#iefix') format('embedded-opentype'),
      url($file-name+'.woff') format('woff'),
      url($file-name+'.ttf') format('truetype'),
      url($file-name+'.svg##{$font-name}') format('svg');
    font-weight: $weight;
    font-style: $style;
  }
}
//Usage
//  @include font-face('gotham', '/fonts/gotham');

//Padding mixin
@mixin padding($top, $right, $bottom, $left) {
  padding-top: $top;
  padding-right: $right;
  padding-bottom: $bottom;
  padding-left: $left;
}
//Margin mixin
@mixin margin($top, $right, $bottom, $left) {
  margin-top: $top;
  margin-right: $right;
  margin-bottom: $bottom;
  margin-left: $left;
}
